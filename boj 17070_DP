// https://www.acmicpc.net/problem/17070
// 골드 5 파이프 옮기기 1
// DP를 이용해서 점화식으로 해결
// 메모리 11848kb, 시간 80ms, 코드길이 1619B


import java.util.*;
import java.io.*;

public class Main {

	public static int n, result = 0;
	public static int[][] map;
	public static int[][][] board;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		n = Integer.parseInt(br.readLine());
		
		map = new int[n][n];
		board = new int[n][n][3]; //0 가로 1 세로 2 대각선
		
		for(int i=0;i<n;i++) {
			st = new StringTokenizer(br.readLine(), " ");
			for(int j=0;j<n;j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
			board[0][1][0] = 1;
		
		for(int i=0;i<n;i++) {
			for(int j=1;j<n;j++) {
				if(i==0 && j==1) continue;
				if(map[i][j] != 0) continue;
				
				
				// 가로에서 오는 경우
				board[i][j][0] += board[i][j-1][0];
				if(i-1>=0) board[i][j][0] += board[i][j-1][2];
				
				// 세로로 오는 경우
				if(i-1>=0) board[i][j][1] += board[i-1][j][1] + board[i-1][j][2];
				
				// 대각으로 오는 경우
				if(i-1>=0 && map[i-1][j] == 0 && map[i][j-1] == 0) {
					board[i][j][2] += board[i-1][j-1][0] + board[i-1][j-1][1] + board[i-1][j-1][2];
				}
				
				
//				System.out.println();
//				pr();
			}
		}
		
		for(int i=0;i<3;i++) {
			result += board[n-1][n-1][i];
		}
		
		System.out.println(result);

	}
//	
//	public static void pr() {
//		for(int i=0;i<n;i++) {
//			for(int j=0;j<n;j++) {
//				System.out.print("(");
//				for(int k=0;k<3;k++) {
//					System.out.print(board[i][j][k] + ", ");
//				}
//				System.out.print(") ");
//			}
//			System.out.println();
//		}
//	}
	
}
