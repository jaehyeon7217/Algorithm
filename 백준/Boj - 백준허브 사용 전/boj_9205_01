// 문제 : 9205, 맥주 마시면서 걸어가기, 실버 1
// https://www.acmicpc.net/problem/9205
// 메모리 : 14,356KB, 시간 116ms, 코드길이 2,033B
// 맥주 20병 = 1000이라서 가능하면 간선 연결하고 BFS로 시작점에서 끝지점까지 도달 가능한지 

import java.io.*;
import java.util.*;

public class Main {
	public static String result;
	public static XY start, end;
	public static XY[] store;
	public static int n;
	public static boolean[] visit;
	
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st;
		
		int T = Integer.parseInt(br.readLine());
		
		for(int t=0; t<T; t++) {
			result = "sad";
			n = Integer.parseInt(br.readLine());
			store = new XY[n+2];
			visit = new boolean[n];
			
			st = new StringTokenizer(br.readLine(), " ");
			store[0] = new XY(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			
			for(int i=1;i<n+1;i++) {
				st = new StringTokenizer(br.readLine(), " ");
				store[i] = new XY(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			}
			
			st = new StringTokenizer(br.readLine(), " ");
			store[n+1] = new XY(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			
			int[][] map = new int[n+2][n+2];
			
			for(int i=0;i<n+2;i++) {
				for(int j=0;j<n+2;j++) {
					int temp = calc(store[i], store[j]);
					if(temp >0 && temp<=1000) {
						map[i][j] = 1;
					}
				}
			}
			
			
			
			Queue<Integer> q = new LinkedList<>();
			boolean[][] visit = new boolean[n+2][n+2];
			
			q.offer(0);
			boolean flag = true;
			while(!q.isEmpty()) {
				int temp = q.poll();
				
				if(map[temp][n+1] == 1) {
					sb.append("happy\n");
					flag = false;
					break;
				}
				
				for(int i=0;i<n+1;i++) {
					if(visit[temp][i]) continue;
					if(map[temp][i] == 1) {
						visit[temp][i] = true;
						q.offer(i);
					}
				}
			}
			if(flag)
				sb.append("sad\n");
			
		}
		
		System.out.println(sb.toString());
	}
	
	
	public static int calc(XY a, XY b) {
		return Math.abs(a.x-b.x) + Math.abs(a.y-b.y);
	}
	
	public static class XY{
		int x;
		int y;
		public XY(int x, int y) {
			super();
			this.x = x;
			this.y = y;
		}
		
	}

	
}
