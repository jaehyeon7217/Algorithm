// 문제 : 4179, 불!, 골드 4
// https://www.acmicpc.net/problem/4179
// 메모리 : 92,940kb, 시간 552ms, 길이 2,065B

import java.io.*;
import java.util.*;

public class Main {
	
	public static int n, m;
	public static char[][] map;
	public static Queue<XY> J = new LinkedList<>();
	public static Queue<XY> F = new LinkedList<>();
	public static int[] dx = {1,-1,0,0};
	public static int[] dy = {0,0,1,-1};
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		map = new char[n][m];
		
		for(int i=0;i<n;i++) {
			map[i] = br.readLine().toCharArray();
			for(int j=0; j<m; j++) {
				if(map[i][j] == 'J') J.offer(new XY(i,j));
				else if(map[i][j] == 'F') F.offer(new XY(i,j));
			}
		}
		
		int cnt = 0;
		
		loop : while(true) {
			cnt++;
			
			Queue<XY> back = new LinkedList<>();
			
				
			
			while(!F.isEmpty()) {
				XY temp = F.poll();
				
				for(int i=0;i<4;i++) {
					int x = temp.x + dx[i];
					int y = temp.y + dy[i];
					
					if(x<0 || y<0 || x>= n || y>= m) continue;
					if(map[x][y] == '.' || map[x][y]== 'J') {
						map[x][y] = 'F';
						back.offer(new XY(x,y));
					}
				}
			}
			
			while(!back.isEmpty()) 
				F.offer(back.poll());
			while(!J.isEmpty()) {
				XY temp = J.poll();
				
				for(int i=0;i<4;i++) {
					int x = temp.x + dx[i];
					int y = temp.y + dy[i];
					
					if(x<0 || y<0 || x>= n || y>= m) break loop;
					if(map[x][y] == '.') {
						map[x][y] = 'J';
						back.offer(new XY(x,y));
					}
				}
			}
			
			if(back.isEmpty()) {
				cnt = -1;
				break;
			}
			
			while(!back.isEmpty()) 
				J.offer(back.poll());
		}
		
		System.out.println(cnt == -1 ? "IMPOSSIBLE" : cnt );
	}
	
	public static class XY{
		int x;
		int y;
		public XY(int x, int y) {
			super();
			this.x = x;
			this.y = y;
		}
		
	}

	
	public static void pr() {
		System.out.println();
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				System.out.print(map[i][j] + " ");
			}
			System.out.println();
		}
	}
}
