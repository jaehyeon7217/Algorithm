// 문제 : 9205, 맥주 마시면서 걸어가기, 실버 1
// https://www.acmicpc.net/problem/9205
// 메모리 : 13,004KB, 시간 108ms, 코드길이 1,885B
// 맥주 20병 = 1000이라서 가능하면 유니온 파인드를 이용해 유니온 후 findset(0)과 findset(n-1) ==> 시작과 끝이 같은 곳인지 확인

import java.io.*;
import java.util.*;

public class Main {
	public static String result;
	public static XY start, end;
	public static XY[] store;
	public static int n;
	public static boolean[] visit;
	public static int[] P;
	
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st;
		
		int T = Integer.parseInt(br.readLine());
		
		for(int t=0; t<T; t++) {
			result = "sad";
			n = Integer.parseInt(br.readLine());
			store = new XY[n+2];
			P = new int[n+2];
			
			st = new StringTokenizer(br.readLine(), " ");
			store[0] = new XY(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			
			for(int i=1;i<n+1;i++) {
				st = new StringTokenizer(br.readLine(), " ");
				store[i] = new XY(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			}
			
			st = new StringTokenizer(br.readLine(), " ");
			store[n+1] = new XY(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			
			for(int i=0;i<n+2;i++)
				P[i]=i;
			
			for(int i=0;i<n+2;i++) {
				for(int j=0;j<n+2;j++) {
					if(i==j)continue;
					int temp = calc(store[i], store[j]);
					if(temp >0 && temp<=1000) {
						unionSet(i,j);
					}
				}
			}
			
			
			if(findSet(0) == findSet(n+1)) 
				sb.append("happy\n");
			else
				sb.append("sad\n");
		}
		System.out.println(sb.toString());
	}
	
	public static int findSet(int n) {
		if(n==P[n]) return n;
		
		return P[n] = findSet(P[n]);
	}
	
	public static void unionSet(int a, int b) {
		int x = findSet(a);
		int y = findSet(b);
		P[y] = x;
	}
	
	
	public static int calc(XY a, XY b) {
		return Math.abs(a.x-b.x) + Math.abs(a.y-b.y);
	}
	
	public static class XY{
		int x;
		int y;
		public XY(int x, int y) {
			super();
			this.x = x;
			this.y = y;
		}
		
	}

	
}
