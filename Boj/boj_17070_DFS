// https://www.acmicpc.net/problem/17070
// 골드 5, 파이프 옮기기 1
// DFS를 이용한 해결
// 메모리 292,212kb, 시간 336ms, 코드길이 1645b


import java.util.*;
import java.io.*;

public class Main {

	public static int n, result = 0;
	public static int[][] map;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		n = Integer.parseInt(br.readLine());
		
		map = new int[n][n];
		
		for(int i=0;i<n;i++) {
			st = new StringTokenizer(br.readLine(), " ");
			for(int j=0;j<n;j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		dfs(new XY(0,1,0));
		
		System.out.println(result);

	}
	
	public static void dfs(XY xy) {
		if(xy.x == n-1 && xy.y == n-1) {
			result++;
			return;
		}
		
		if(xy.di == 0) {
			if(xy.y+1<n && map[xy.x][xy.y+1] == 0) dfs(new XY(xy.x, xy.y+1, 0));
			if(xy.x+1<n && xy.y+1<n && map[xy.x][xy.y+1] == 0 && map[xy.x+1][xy.y]==0 && map[xy.x+1][xy.y+1] == 0 ) dfs(new XY(xy.x+1, xy.y+1, 2));
		}
		else if (xy.di==1) {
			if(xy.x+1<n && map[xy.x+1][xy.y] == 0) dfs(new XY(xy.x+1, xy.y, 1));
			if(xy.x+1<n && xy.y+1<n && map[xy.x][xy.y+1] == 0 && map[xy.x+1][xy.y]==0 && map[xy.x+1][xy.y+1] == 0 ) dfs(new XY(xy.x+1, xy.y+1, 2));
		}else {
			if(xy.y+1<n && map[xy.x][xy.y+1] == 0) dfs(new XY(xy.x, xy.y+1, 0));
			if(xy.x+1<n && map[xy.x+1][xy.y] == 0) dfs(new XY(xy.x+1, xy.y, 1));
			if(xy.x+1<n && xy.y+1<n && map[xy.x][xy.y+1] == 0 && map[xy.x+1][xy.y]==0 && map[xy.x+1][xy.y+1] == 0 ) dfs(new XY(xy.x+1, xy.y+1, 2));
		}
		
	}
	
	public static class XY{
		int x;
		int y;
		int di; // 0 가로 , 1 세로, 2 대각선
		public XY(int x, int y, int di) {
			super();
			this.x = x;
			this.y = y;
			this.di = di;
		}
		
	}
}
